# Benutzer und Rollen für Dev-Services
#quarkus.keycloak.devservices.users.simon=simon
#quarkus.keycloak.devservices.roles.simon=Admin
#quarkus.keycloak.devservices.users.alice=alice
#quarkus.keycloak.devservices.roles.alice=User
#quarkus.keycloak.devservices.users.joel=joel
#quarkus.keycloak.devservices.roles.joel=Author

#quarkus.security.users.embedded.roles.admin=Admin
#quarkus.security.users.embedded.roles.author=Author
#quarkus.security.users.embedded.roles.user=User

#quarkus.oidc.auth-server-url=http://localhost:8180/realms/blog-auth
#quarkus.oidc.client-id=backend-service
#quarkus.oidc.credentials.secret=ahMHtSz4ZiCZyZkj3YcC38qp8uQSvFtE

# ✅ KEYCLOAK JWT-Login in Swagger UI
%prod.quarkus.smallrye-openapi.security-scheme=jwt

# ✅ CORS für das Web-Frontend aktivieren
quarkus.http.cors=true
quarkus.http.cors.origins=*

# ✅ Docker Image Konfiguration
quarkus.container-image.build=true
quarkus.container-image.group=fanki
quarkus.container-image.name=blog-backend
quarkus.container-image.tag=0.1

# ✅ Konfigurationsprofile
quarkus.http.port=9090
%dev.quarkus.http.port=8181

# ✅ Swagger-UI
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui
quarkus.smallrye-openapi.path=/swagger

# ✅ Keycloak Realm
quarkus.keycloak.devservices.realm-path=blog-realm.json
quarkus.keycloak.devservices.realm-name=blog

# ✅ Datenbank-Anbindung
quarkus.hibernate-orm.database.generation=none
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=dbuser
quarkus.datasource.password=dbuser
quarkus.datasource.jdbc.url=jdbc:mysql://blog-mysql:3306/blogdb
quarkus.flyway.migrate-at-start=true

# ✅ Kafka Integration für Blog-Validierung
kafka.bootstrap.servers=redpanda-1:9092

# ✅ Kafka Producer: Senden einer Validierungsanfrage für Blogs
mp.messaging.outgoing.validation-request.connector=smallrye-kafka
mp.messaging.outgoing.validation-request.topic=validation-request
mp.messaging.outgoing.validation-request.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

# ✅ Kafka Consumer: Empfang der Validierungsantwort
mp.messaging.incoming.validation-response.connector=smallrye-kafka
mp.messaging.incoming.validation-response.topic=validation-response
mp.messaging.incoming.validation-response.value.deserializer=io.quarkus.kafka.client.serialization.ObjectMapperDeserializer
mp.messaging.incoming.validation-response.auto.offset.reset=earliest

quarkus.oidc.enabled=false
quarkus.flyway.locations=db/migration

