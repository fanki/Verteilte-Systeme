
# Benutzer und Rollen f√ºr Dev-Services
#quarkus.keycloak.devservices.users.simon=simon
#quarkus.keycloak.devservices.roles.simon=Admin
#quarkus.keycloak.devservices.users.alice=alice
#quarkus.keycloak.devservices.roles.alice=User
#quarkus.keycloak.devservices.users.joel=joel
#quarkus.keycloak.devservices.roles.joel=Author

#quarkus.security.users.embedded.roles.admin=Admin
#quarkus.security.users.embedded.roles.author=Author
#quarkus.security.users.embedded.roles.user=User


#quarkus.oidc.auth-server-url=http://localhost:8180/realms/blog-auth
#quarkus.oidc.client-id=backend-service
#quarkus.oidc.credentials.secret=ahMHtSz4ZiCZyZkj3YcC38qp8uQSvFtE

# KEYCLOAK JWT-Login in Swagger UI
%prod.quarkus.smallrye-openapi.security-scheme=jwt

# Web
quarkus.http.cors=true
quarkus.http.cors.origins=*

# Docker Image erstellen und Namen vergeben
quarkus.container-image.build=true
quarkus.container-image.group=fanki
quarkus.container-image.name=blog-backend
quarkus.container-image.tag=0.1

# Configuration Profiles
quarkus.http.port=9090
%dev.quarkus.http.port=8181

# Swagger-UI im Produktionsprofil
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui
quarkus.smallrye-openapi.path=/swagger


# Realm
quarkus.keycloak.devservices.realm-path=blog-realm.json
quarkus.keycloak.devservices.realm-name=blog

# db-Anbindung
quarkus.hibernate-orm.database.generation=none
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=dbuser
quarkus.datasource.password=dbuser
quarkus.datasource.jdbc.url=jdbc:mysql://blog-mysql:3306/blogdb
quarkus.flyway.migrate-at-start=true






